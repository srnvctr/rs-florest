import {
  addDoc,
  collection,
  doc,
  getDocs,
  setDoc,
  updateDoc,
  deleteDoc,
} from "firebase/firestore";
import { db } from "../config";

export const getService = async () => {
  try {
    const servicesCollection = collection(db, "services");
    const querySnapshot = await getDocs(servicesCollection);

    if (!querySnapshot.empty) {
      const serviceData = querySnapshot.docs.map((doc) => doc.data());
      return serviceData;
    } else {
      return [];
    }
  } catch (error) {
    console.error("Error fetching services:", error);
    return [];
  }
};

export const createService = async (formData: any) => {
  try {
    const servicesCollection = collection(db, "services");

    const docRef = await addDoc(servicesCollection, {
      ...formData,
      id: "",
    });

    const autoGeneratedId = docRef.id;
    await updateDoc(docRef, { id: autoGeneratedId });

    console.log("New service created with ID:", autoGeneratedId);

    return true;
  } catch (error) {
    console.error("Error creating service:", error);
    return false;
  }
};

export const updateService = async (id: string, formData: any) => {
  try {
    const serviceRef = doc(db, "services", id);
    await setDoc(serviceRef, formData, { merge: true });
    console.log(`Service with ID ${id} updated successfully.`);
    return true;
  } catch (error) {
    console.error(`Error updating service with ID ${id}:`, error);
    return false;
  }
};

export const deleteService = async (id: string) => {
  try {
    const serviceRef = doc(db, "services", id);
    await deleteDoc(serviceRef);
    console.log(`Service with ID ${id} deleted successfully.`);
    return true;
  } catch (error) {
    console.error(`Error deleting service with ID ${id}:`, error);
    return false;
  }
};
